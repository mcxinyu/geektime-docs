site_name: 深入浅出计算机组成原理

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra_css:
  - static/css/extra.css

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright &copy; 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 开篇词_为什么你需要学习计算机组成原理_.md
  
   - 01_冯·诺依曼体系结构_计算机组成的金字塔.md
  
   - 02_给你一张知识地图，计算机组成原理应该这么学.md
  
   - 03_通过你的CPU主频，我们来谈谈“性能”究竟是什么_.md
  
   - 04_穿越功耗墙，我们该从哪些方面提升“性能”_.md
  
   - 05_计算机指令_让我们试试用纸带编程.md
  
   - 06_指令跳转_原来if...else就是goto.md
  
   - 07_函数调用_为什么会发生stackoverflow_.md
  
   - 08_ELF和静态链接_为什么程序无法同时在Linux和Windows下运行_.md
  
   - 09_程序装载_“640K内存”真的不够用么_.md
  
   - 10_动态链接_程序内部的“共享单车”.md
  
   - 11_二进制编码_“手持两把锟斤拷，口中疾呼烫烫烫”_.md
  
   - 12_理解电路_从电报机到门电路，我们如何做到“千里传信”_.md
  
   - 13_加法器_如何像搭乐高一样搭电路（上）_.md
  
   - 14_乘法器_如何像搭乐高一样搭电路（下）_.md
  
   - 15_浮点数和定点数（上）_怎么用有限的Bit表示尽可能多的信息_.md
  
   - 16_浮点数和定点数（下）_深入理解浮点数到底有什么用_.md
  
   - 17_建立数据通路（上）_指令&#43;运算=CPU.md
  
   - 18_建立数据通路（中）_指令&#43;运算=CPU.md
  
   - 19_建立数据通路（下）_指令&#43;运算=CPU.md
  
   - 20_面向流水线的指令设计（上）_一心多用的现代CPU.md
  
   - 21_面向流水线的指令设计（下）_奔腾4是怎么失败的_.md
  
   - 22_冒险和预测（一）_hazard是“危”也是“机”.md
  
   - 23_冒险和预测（二）_流水线里的接力赛.md
  
   - 24_冒险和预测（三）_CPU里的“线程池”.md
  
   - 25_冒险和预测（四）_今天下雨了，明天还会下雨么_.md
  
   - 26_Superscalar和VLIW_如何让CPU的吞吐率超过1_.md
  
   - 27_SIMD_如何加速矩阵乘法_.md
  
   - 28_异常和中断_程序出错了怎么办_.md
  
   - 29_CISC和RISC_为什么手机芯片都是ARM_.md
  
   - 30_GPU（上）_为什么玩游戏需要使用GPU_.md
  
   - 31_GPU（下）_为什么深度学习需要使用GPU_.md
  
   - 32_FPGA和ASIC_计算机体系结构的黄金时代.md
  
   - 33_解读TPU_设计和拆解一块ASIC芯片.md
  
   - 34_理解虚拟机_你在云上拿到的计算机是什么样的_.md
  
   - 35_存储器层次结构全景_数据存储的大金字塔长什么样_.md
  
   - 36_局部性原理_数据库性能跟不上，加个缓存就好了_.md
  
   - 37_高速缓存（上）_“4毫秒”究竟值多少钱_.md
  
   - 38_高速缓存（下）_你确定你的数据更新了么_.md
  
   - 39_MESI协议_如何让多核CPU的高速缓存保持一致_.md
  
   - 40_理解内存（上）_虚拟内存和内存保护是什么_.md
  
   - 41_理解内存（下）_解析TLB和内存保护.md
  
   - 42_总线_计算机内部的高速公路.md
  
   - 43_输入输出设备_我们并不是只能用灯泡显示“0”和“1”.md
  
   - 44_理解IO_WAIT_I_O性能到底是怎么回事儿_.md
  
   - 45_机械硬盘_Google早期用过的“黑科技”.md
  
   - 46_SSD硬盘（上）_如何完成性能优化的KPI_.md
  
   - 47_SSD硬盘（下）_如何完成性能优化的KPI_.md
  
   - 48_DMA_为什么Kafka这么快_.md
  
   - 49_数据完整性（上）_硬件坏了怎么办_.md
  
   - 50_数据完整性（下）_如何还原犯罪现场_.md
  
   - 51_分布式计算_如果所有人的大脑都联网会怎样_.md
  
   - 52_设计大型DMP系统（上）_MongoDB并不是什么灵丹妙药.md
  
   - 53_设计大型DMP系统（下）_SSD拯救了所有的DBA.md
  
   - 54_理解Disruptor（上）_带你体会CPU高速缓存的风驰电掣.md
  
   - 55_理解Disruptor（下）_不需要换挡和踩刹车的CPU，有多快_.md
  
   - 结束语_知也无涯，愿你也享受发现的乐趣.md
  
   - 特别加餐_我在2019年F8大会的两日见闻录.md
  
   - FAQ第一期_学与不学，知识就在那里，不如就先学好了.md
  
   - 用户故事_赵文海_怕什么真理无穷，进一寸有一寸的欢喜.md
  
   - FAQ第二期_世界上第一个编程语言是怎么来的_.md
  
   - 特别加餐_我的一天怎么过_.md
  