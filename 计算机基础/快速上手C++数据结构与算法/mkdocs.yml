site_name: 快速上手C&#43;&#43;数据结构与算法

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra_css:
  - static/css/extra.css

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright &copy; 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 开篇词｜学习数据结构与算法，也可以是件小事.md
  
   - 01｜编程环境_工欲善其事，必先利其器.md
  
   - 02｜顺序表（上）_如何实现快速地随机访问_.md
  
   - 03｜顺序表（下）_常用操作合集与复杂度分析.md
  
   - 04｜单链表_如何通过指针提升插入、删除数据的速度_.md
  
   - 05｜双链表_搜索链表中节点的速度还可以更快吗_.md
  
   - 06｜循环链表_如何更方便地寻找数据_.md
  
   - 07｜静态链表_用一维数组表达的链表.md
  
   - 08｜栈_如何实现数据的后进先出_.md
  
   - 09｜队列_如何实现数据的先进先出_.md
  
   - 10｜二叉树_二叉树到底长什么样子_.md
  
   - 11｜二叉树_深度优先和广度优先遍历是什么_.md
  
   - 12｜二叉树_如何存储二叉树_.md
  
   - 13｜线索二叉树_如何线索化二叉树以提升访问速度_.md
  
   - 14｜二叉查找树（BST）_查找速度你最行.md
  
   - 15｜平衡二叉树（AVL）_平衡如此重要，怎么做到的_.md
  
   - 16｜平衡二叉树（AVL）_节点删除后的平衡性调整.md
  
   - 17｜红黑（R-B）树_和平衡二叉树有什么不同_.md
  
   - 18｜红黑（R-B）树_节点插入后的平衡性调整.md
  
   - 19｜红黑（R-B）树_节点删除后的平衡性调整（一）.md
  
   - 20｜红黑（R-B）树_节点删除后的平衡性调整（二）.md
  
   - 21｜哈夫曼（Huffman）树_将数据压缩后再传输更省带宽.md
  
   - 22｜树、森林、二叉树_相互之间的转换.md
  
   - 23｜图_如何用图表达错综复杂的数据_.md
  
   - 24｜图的存储（上）_邻接矩阵、邻接表和十字链表有什么不同_.md
  
   - 25｜图的存储（下）_为什么我们还需要邻接多重表和边集数组_.md
  
   - 26｜图_深度优先遍历（DFS）与广度优先遍历（BFS）.md
  
   - 27｜最小生成树_如何用普里姆（Prim）算法解决修路费用最少的问题_.md
  
   - 28｜最小生成树_克鲁斯卡尔（Kruskal）算法与修路费用最少的问题_.md
  
   - 29｜最短路径_迪杰斯特拉（Dijkstra）算法与选择最节省时间的行走路线问题.md
  
   - 30｜最短路径_弗洛伊德（Floyd）算法与乘车费用最少的问题.md
  
   - 31｜图的应用_如何通过拓扑排序找到合理的先后顺序_.md
  
   - 32｜图的应用_如何通过关键路径估算完成工程需要的最短时间_.md
  
   - 33｜直接插入排序_为什么数据越有序，排序速度越快_.md
  
   - 34｜希尔排序_通过部分有序逼近全局有序.md
  
   - 35｜冒泡排序_大数下沉，小数上浮.md
  
   - 36｜快速排序_如何通过基准元素改进冒泡排序_.md
  
   - 37｜简单选择排序与堆排序_多趟排序与利用有序完全二叉树进行排序.md
  
   - 38｜归并排序_将多个有序序列按其中的元素值大小两两合并.md
  
   - 39｜串的顺序和链式存储结构_定长数组与动态数组.md
  
   - 40｜串的朴素模式匹配算法_暴力但容易理解.md
  
   - 41｜串的KMP模式匹配算法观察_理解困难.md
  
   - 42｜串的KMP模式匹配算法之实现与性能分析_代码实现简单.md
  
   - 43｜串的KMP模式匹配算法之改进_通过优化代码解决多次重复比较问题.md
  
   - 44｜跳表_为什么Redis用跳表实现而MySQL用B&#43;树_.md
  
   - 45｜哈希表与哈希算法_哈希表适合用在什么样的情景_.md
  
   - 46｜哈希表与哈希算法_字符串的MD5值是通过哈希算法得到的_.md
  
   - 47｜多路查找树_B树在数据库中的应用.md
  
   - 48｜多路查找树_B&#43;树的插入与删除操作详解.md
  
   - 49｜多路查找树_B树、B&#43;树在数据库中的应用有何不同_.md
  
   - 50｜折半插入、2路插入、表插入_3种插入类排序类排序有哪些异同_.md
  
   - 51｜树形选择排序_按照锦标赛的思想进行排序.md
  
   - 52｜计数排序_不通过比较也可以进行排序.md
  
   - 53｜基数排序与桶排序_如何通过分配和收集进行排序_.md
  
   - 结束语｜日拱一卒，功不唐捐.md
  