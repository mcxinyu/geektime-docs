site_name: Go并发编程实战课

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra_css:
  - static/css/extra.css

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright &copy; 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 开篇词_想吃透Go并发编程，你得这样学！.md
  
   - 01_Mutex_如何解决资源并发访问问题_.md
  
   - 02_Mutex_庖丁解牛看实现.md
  
   - 03｜Mutex_4种易错场景大盘点.md
  
   - 04｜Mutex_骇客编程，如何拓展额外功能_.md
  
   - 05｜RWMutex_读写锁的实现原理及避坑指南.md
  
   - 06_WaitGroup_协同等待，任务编排利器.md
  
   - 07_Cond_条件变量的实现机制及避坑指南.md
  
   - 08_Once_一个简约而不简单的并发原语.md
  
   - 09_map_如何实现线程安全的map类型_.md
  
   - 10_Pool_性能提升大杀器.md
  
   - 11_Context_信息穿透上下文.md
  
   - 12_atomic_要保证原子操作，一定要使用这几种方法.md
  
   - 13_Channel_另辟蹊径，解决并发问题.md
  
   - 14_Channel_透过代码看典型的应用模式.md
  
   - 15_内存模型_Go如何保证并发读写的顺序_.md
  
   - 16_Semaphore_一篇文章搞懂信号量.md
  
   - 17_SingleFlight和CyclicBarrier_请求合并和循环栅栏该怎么用_.md
  
   - 18_分组操作_处理一组子任务，该用什么并发原语_.md
  
   - 19_在分布式环境中，Leader选举、互斥锁和读写锁该如何实现_.md
  
   - 20_在分布式环境中，队列、栅栏和STM该如何实现_.md
  
   - 结束语_再聊Go并发编程的价值和精进之路.md
  