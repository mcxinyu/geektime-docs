site_name: JavaScript核心原理解析

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra_css:
  - static/css/extra.css

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright &copy; 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 开篇词_如何解决语言问题_.md
  
   - 01_delete0_JavaScript中到底有什么是可以销毁的.md
  
   - 02_varx=y=100_声明语句与语法改变了JavaScript语言核心性质.md
  
   - 03_a.x=a={n:2}_一道被无数人无数次地解释过的经典面试题.md
  
   - 04_exportdefaultfunction(){}_你无法导出一个匿名函数表达式.md
  
   - 05_for(letxof[1,2,3])..._for循环并不比使用函数递归节省开销.md
  
   - 加餐_捡豆吃豆的学问（上）_这门课讲的是什么_.md
  
   - 加餐_捡豆吃豆的学问（下）_这门课该怎么学_.md
  
   - 06_x:breakx;搞懂如何在循环外使用break，方知语句执行真解.md
  
   - 07_`${1}`_详解JavaScript中特殊的可执行结构.md
  
   - 08_x=&gt;x_函数式语言的核心抽象_函数与表达式的同一性.md
  
   - 09_(...x)_不是表达式、语句、函数，但它却能执行.md
  
   - 10_x=yieldx_迭代过程的“函数式化”.md
  
   - 11_throw1;_它在“最简单语法榜”上排名第三.md
  
   - 加餐_让JavaScript运行起来.md
  
   - 12_1in1..constructor_这行代码的结果，既可能是true，也可能是false.md
  
   - 13_newX_从构造器到类，为你揭密对象构造的全程.md
  
   - 14_super.xxx()_虽然直到ES10还是个半吊子实现，却也值得一讲.md
  
   - 15_returnObject.create(new.target.prototype)_做框架设计的基本功_写一个根类.md
  
   - 16_[a,b]={a,b}_让你从一行代码看到对象的本质.md
  
   - 17_Object.setPrototypeOf(x,null)_连BrendanEich都认错，但null值还活着.md
  
   - 18_a+b_动态类型是灾难之源还是最好的特性_（上）.md
  
   - 19_a+b_动态类型是灾难之源还是最好的特性_（下）.md
  
   - 20_(0,eval)(&#34;x=100&#34;)_一行让严格模式形同虚设的破坏性设计（上）.md
  
   - 21_(0,eval)(&#34;x=100&#34;)_一行让严格模式形同虚设的破坏性设计（下）.md
  
   - 22_newFunction(&#39;x=100&#39;)();_函数的类化是对动态与静态系统的再次统一.md
  
   - 结束语_愿你能做一个真正“懂”的程序员.md
  
   - 结课测试_这些JavaScript知识，你真的掌握了吗_.md
  