site_name: 徐昊·TDD项目实战70讲

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra_css:
  - static/css/extra.css

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright &copy; 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 开篇词｜为什么TDD是当前最具工程效能的研发流程_.md
  
   - 课前必读01｜20年前的“老古董”技术，为什么还值得开个课_.md
  
   - 课前必读02｜程序员究竟是搞技术的，还是做工程的_.md
  
   - 01｜TDD演示（1）_任务分解法与整体工作流程.md
  
   - 02｜TDD演示（2）_识别坏味道与代码重构.md
  
   - 03｜TDD演示（3）_按测试策略重组测试.md
  
   - 04｜TDD演示（4）_实现对于列表参数的支持.md
  
   - 05｜TDD中的测试（1）_状态验证为什么是主要的使用方式_.md
  
   - 06｜TDD中的测试（2）_行为验证为什么应该尽量避免使用_.md
  
   - 07｜TDD中的测试（3）_集成测试还是单元测试_.md
  
   - 08｜TDD中的驱动（1）_驱动的极限是什么_.md
  
   - 09｜TDD中的驱动（2）_重构发挥了什么作用_.md
  
   - 10｜TDD中的驱动（3）_何为经典学派_何为伦敦学派_.md
  
   - 11｜作为工程化方法的TDD_更低的成本与更高的效能.md
  
   - 代码评点01｜不同语言TDD的节奏有何不同_.md
  
   - 代码评点02｜什么是合适TDD的语言和IDE_.md
  
   - 12｜实战中的TDD_RESTfulAPI的开发框架.md
  
   - 13｜DIContainer（1）_如何实现基本的DI容器结构_.md
  
   - 14｜DIContainer（2）_如何通过SadPath为容器增加功能_.md
  
   - 15｜DIContainer（3）_如何重构已有的代码_.md
  
   - 16｜DIContainer（4）_如何实现对循环依赖的处理_.md
  
   - 17｜DIContainer（5）_API接口该怎么设计_.md
  
   - 18｜DIContainer（6）_如何实现循环依赖的检查_.md
  
   - 19｜DIContainer（7）_如何实现FieldInjection部分的功能_.md
  
   - 20｜DIContainer（8）_如何实现MethodInjection部分的功能_.md
  
   - 21｜DIContainer（9）_怎样重构测试代码_.md
  
   - 22｜DIContainer（10）_怎样将大粒度的测试重构为等效的小粒度测试代码_.md
  
   - 23｜DIContainer（11）_如何对ContainerTest进行文档化改造_.md
  
   - 24｜DIContainer（12）_如何增补功能_.md
  
   - 25｜DIContainer（13）_任务上的遗漏该怎么处理_.md
  
   - 26｜DIContainer（14）_如何重构对Type类型判断的逻辑_.md
  
   - 27｜DIContainer（15）_如何封装类型判断逻辑_.md
  
   - 28｜DIContainer（16）_行为封装会对测试产生什么影响_.md
  
   - 29｜DIContainer（17）_如何重构ContextConfig内部的实现_.md
  
   - 30｜DIContainer（18）_如何增补依赖缺失和循环依赖的测试_.md
  
   - 31｜DIContainer（19）_Qualifier部分的功能要如何完成_.md
  
   - 32｜DIContainer（20）_如何对代码和测试进行重构_.md
  
   - 33｜DIContainer（21）_如何处理Singleton生命周期部分的功能_.md
  
   - 34｜DIContainer（22）_如何对Bind的逻辑进行重构_.md
  
   - 35｜DIContainer（23）_项目回顾与总结.md
  
   - 36｜实战中的TDD_RESTfulWebServices.md
  
   - 37｜RESTfulWebServices（1）_明确架构愿景与架构组件间的交互.md
  
   - 38｜RESTfulWebServices（2）_根据Spike的结果，要如何调整架构愿景_.md
  
   - 39｜RESTfulWebServices（3）_明确架构愿景与调用栈顺序.md
  
   - 40｜RESTfulWebServices（4）_在当前架构愿景下，要如何分解任务_.md
  
   - 41｜RESTfulWebServices（5）_如何通过对数据测试的管理来凸显意图_.md
  
   - 42｜RESTfulWebServices（6）_如何处理JAX-RS定义的异常类_.md
  
   - 43｜RESTfulWebServices（7）_剩下两个SadPath场景该如何处理_.md
  
   - 44｜RESTfulWebServices（8）_如何在现有代码的基础上构造测试_.md
  
   - 45｜RESTfulWebServices（9）_通过伦敦学派得到的测试风格是什么样的_.md
  
   - 46｜RESTfulWebServices（10）_伦敦学派与经典学派的测试节奏有何不同_.md
  
   - 47｜RESTfulWebServices（11）_如何通过Spike来验证架构愿景_.md
  
   - 48｜RESTfulWebServices（12）_如何调整接口和架构愿景_.md
  
   - 49｜RESTfulWebService（13）_如何SpikeSub-ResourceLocator_.md
  
   - 50｜RESTfulWebServices（14）_分解任务与Setup测试.md
  
   - 51｜RESTfulWebServices（15）_为什么选择在第一个测试之后就开始重构_.md
  
   - 52｜RESTfulWebServices（16）_重构手法之设计方法名的名称.md
  
   - 53｜RESTfulWebServices（17）_如何进行Spike的架构愿景细化_.md
  
   - 54｜RESTfulWebServices（18）_如何实现UriTemplate的主要功能_.md
  
   - 55｜RESTfulWebServices（19）_如何更有效地构造测试数据_.md
  
   - 56｜RESTfulWebServices（20）_为什么要通过测试的方法来驱动出代码结构_.md
  
   - 57｜RESTfulWebServices（21）_按照三角法，该如何增加新的测试案例_.md
  
   - 58｜RESTfulWebServices（22）_重构还是继续完成功能_.md
  
   - 59｜RESTfulWebServices（23）_如何构造测试数据_.md
  
   - 60｜RESTfulWebServices（24）_RootResource的测试要如何改造_.md
  
   - 61｜RESTfulWebServices（25）_如何重构DefaultResourceRouter中的Result结构_.md
  
   - 62｜RESTfulWebServices（26）_如何继续划分ResourceLocator的任务_.md
  
   - 63｜RESTfulWebServices（27）_如何通过重构修改接口_.md
  
   - 64｜RESTfulWebServices（28）_如何重构Resource、SubResource等接口与实现_.md
  
   - 65｜RESTfulWebServices（29）_后续任务将要如何划分与实现_.md
  
   - 66｜RESTfulWebServices（30）_什么情况下应该使用行为验证_.md
  
   - 67｜RESTfulWebServices（31）_对于option的测试策略应该是怎样的_.md
  
   - 68｜RESTfulWebServices（32）_目前代码中的一个重大Bug是什么_.md
  
   - 69｜RESTfulWebServices（33）_如何拆分对于injection部分的需求_.md
  
   - 70｜RESTfulWebServices（34）_在当前代码结构下，要如何进行重构_.md
  
   - 71｜RESTfulWebServices（35）_如何将测试改为动态测试_.md
  
   - 72｜RESTfulWebServices（36）_在现有结构下，如何支持转换构造函数_.md
  
   - 73｜RESTfulWebServices（37）_再增加converter方法时，步骤有什么不同_.md
  
   - 74｜RESTfulWebServices（38）_如何提取方法调用部分_.md
  
   - 75｜RESTfulWebServices（39）_如何使用继承的方式来复用测试_.md
  
   - 76｜RESTfulWebServices（40）_如何开展有效的集成测试_.md
  
   - 77｜RESTfulWebServices（41）_对于资源的访问，我们需要补充哪些相关功能_.md
  
   - 78｜RESTfulWebServices（42）_项目总结与回顾.md
  
   - 用户故事01｜aoe_如果把《重构》这本书拍成电视剧.md
  
   - 79｜线段编辑器_架构思路与任务拆分.md
  
   - 80｜LineEditor（2）_如何重构生成与更新锚点控制点的逻辑_.md
  
   - 81｜结束语_掌握TDD的那天，我才成为了可靠高效的职业程序员.md
  
   - 期末测试｜赴一场100分之约！.md
  